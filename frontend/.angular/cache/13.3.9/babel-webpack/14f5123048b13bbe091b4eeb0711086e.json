{"ast":null,"code":"import _asyncToGenerator from \"/Users/jesse/Documents/faux-chezie/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BaseChartDirective } from 'ng2-charts';\nimport DataLabelsPlugin from 'chartjs-plugin-datalabels';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/erg.service\";\nimport * as i2 from \"ng2-charts\";\nexport let MembersComponent = /*#__PURE__*/(() => {\n  class MembersComponent {\n    constructor(ergService) {\n      this.ergService = ergService;\n      this.ergs = [];\n      this.ergMemberCount = 0;\n      this.chartLabels = [];\n      this.labelData = []; //Bar chart options\n\n      this.barChartOptions = {\n        responsive: true,\n        datasets: {\n          bar: {\n            hoverBackgroundColor: '#ffb247'\n          }\n        },\n        // We use these empty structures as placeholders for dynamic theming.\n        scales: {\n          x: {},\n          y: {\n            min: 5\n          }\n        },\n        backgroundColor: '#3248f3',\n        plugins: {\n          tooltip: {\n            callbacks: {\n              labelColor(tooltipItem) {\n                return {\n                  borderColor: '#ffb247',\n                  backgroundColor: '#ffb247'\n                };\n              }\n\n            }\n          },\n          legend: {\n            display: true,\n            labels: {}\n          },\n          datalabels: {\n            anchor: 'end',\n            align: 'end'\n          }\n        }\n      };\n      this.barChartType = 'bar'; //Use barchart plugin for custom styles\n\n      this.barChartPlugins = [DataLabelsPlugin]; //Bar chart data is assigned to class properties\n\n      this.barChartData = {\n        labels: this.chartLabels,\n        datasets: [{\n          data: this.labelData,\n          label: 'OVERALL MEMBERSHIP'\n        }]\n      };\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.ergService.getAllErgs();\n\n        yield _this.ergDataSetup();\n      })();\n    } //Chart events\n\n\n    chartClicked({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n\n    chartHovered({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n    /**\n     * Code re-use warning, Jesse, can we consolidate this in the service?!!!\n     * Subscribes to data service, will assign class ergs from ergService subject.\n     * Assigns ergMember count based on the accumulation of numberOfMembers of all ERGs.\n     *\n     * @returns {Promise<void>} Returns void\n     */\n\n\n    ergDataSetup() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          _this2.ergService.ergSubject$.subscribe(ergs => {\n            var _a;\n\n            if (ergs != null) {\n              _this2.ergs = ergs; //Reset memberCount, otherwise the value (state) is saved and re-added in the addition of another ERG.\n\n              let memberCount = 0;\n\n              _this2.ergs.forEach(erg => {\n                memberCount += erg.numberOfMembers;\n\n                _this2.chartLabels.push(erg.name);\n\n                _this2.labelData.push(erg.numberOfMembers);\n              });\n\n              _this2.ergMemberCount = memberCount;\n            }\n\n            (_a = _this2.chart) === null || _a === void 0 ? void 0 : _a.update();\n          });\n\n          return;\n        } catch (err) {\n          console.log(err);\n          throw err;\n        }\n      })();\n    }\n\n  }\n\n  MembersComponent.ɵfac = function MembersComponent_Factory(t) {\n    return new (t || MembersComponent)(i0.ɵɵdirectiveInject(i1.ErgService));\n  };\n\n  MembersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MembersComponent,\n    selectors: [[\"app-members\"]],\n    viewQuery: function MembersComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseChartDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 5,\n    consts: [[1, \"page-container\"], [1, \"members-landing\"], [1, \"kpi-card\", \"total-active-erg-members\"], [1, \"kpi-title\"], [1, \"kpi-metric\"], [1, \"kpi-card\", \"graph-card\"], [1, \"graph-container\"], [2, \"display\", \"block\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"plugins\", \"type\", \"chartHover\", \"chartClick\"]],\n    template: function MembersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4, \"ACTIVE ERG MEMBERS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"canvas\", 8);\n        i0.ɵɵlistener(\"chartHover\", function MembersComponent_Template_canvas_chartHover_10_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function MembersComponent_Template_canvas_chartClick_10_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.ergMemberCount);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.barChartOptions)(\"plugins\", ctx.barChartPlugins)(\"type\", ctx.barChartType);\n      }\n    },\n    directives: [i2.BaseChartDirective],\n    styles: [\".page-container[_ngcontent-%COMP%]{width:100vw;top:65px;position:relative}.members-landing[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(11,1fr);grid-template-rows:repeat(11,1fr);min-height:100vh;background-color:#f9f9fa}.kpi-card[_ngcontent-%COMP%]{min-height:125px;min-width:250px;border-radius:10px;width:100%;background-color:#fff;place-self:center}.kpi-card[_ngcontent-%COMP%]   .kpi-title[_ngcontent-%COMP%], .kpi-card[_ngcontent-%COMP%]   .kpi-metric[_ngcontent-%COMP%]{color:#000;display:flex;flex-flow:row wrap;justify-content:center;padding:25px;place-content:center}.total-active-erg-members[_ngcontent-%COMP%]{grid-area:1/2/4/11}.graph-card[_ngcontent-%COMP%]{grid-area:4/2/8/11;height:100%}.graph-container[_ngcontent-%COMP%]{padding:10px}@media (min-width: 992px){.page-container[_ngcontent-%COMP%]{width:calc(100vw - 90px);left:90px;position:relative;top:0}.kpi-card[_ngcontent-%COMP%]   .kpi-title[_ngcontent-%COMP%], .kpi-card[_ngcontent-%COMP%]   .kpi-metric[_ngcontent-%COMP%]{justify-content:flex-start}.graph-card[_ngcontent-%COMP%]{grid-area:4/2/11/11}.graph-container[_ngcontent-%COMP%]{padding:25px}}\"]\n  });\n  return MembersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}