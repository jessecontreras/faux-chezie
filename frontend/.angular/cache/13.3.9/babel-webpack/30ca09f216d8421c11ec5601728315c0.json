{"ast":null,"code":"import { NavigationStart } from '@angular/router'; //Local dependencies\n\nimport { AlertType } from '../../_models/alert.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../_services/alert.service\";\n\nfunction AlertComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function AlertComponent_div_0_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const alert_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.removeAlert(alert_r1);\n    });\n    i0.ɵɵtext(2, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const alert_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.cssClass(alert_r1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", alert_r1.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nexport let AlertComponent = /*#__PURE__*/(() => {\n  class AlertComponent {\n    constructor(router, alertService) {\n      this.router = router;\n      this.alertService = alertService;\n      this.id = 'default-alert';\n      this.fade = true;\n      this.alerts = [];\n    }\n\n    ngOnInit() {\n      // subscribe to new alert notifications\n      this.alertSubscription$ = this.alertService.onAlert(this.id).subscribe(alert => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange); // remove 'keepAfterRouteChange' flag on the rest\n\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\n          return;\n        } // add alert to array\n\n\n        this.alerts.push(alert); // auto close alert if required\n\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      }); // clear alerts on location change\n\n      this.routeSubscription$ = this.router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          this.alertService.clear(this.id);\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      // unsubscribe to avoid memory leaks\n      this.alertSubscription$.unsubscribe();\n      this.routeSubscription$.unsubscribe();\n    }\n\n    removeAlert(alert) {\n      // check if already removed to prevent error on auto close\n      if (!this.alerts.includes(alert)) return;\n\n      if (this.fade) {\n        // fade out alert\n        alert.fade = true; // remove alert after faded out\n\n        setTimeout(() => {\n          this.alerts = this.alerts.filter(x => x !== alert);\n        }, 250);\n      } else {\n        // remove alert\n        this.alerts = this.alerts.filter(x => x !== alert);\n      }\n    }\n\n    cssClass(alert) {\n      if (!alert) return;\n      const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n      const alertTypeClass = {\n        [AlertType.Success]: 'alert alert-success',\n        [AlertType.Error]: 'alert alert-danger',\n        [AlertType.Info]: 'alert alert-info',\n        [AlertType.Warning]: 'alert alert-warning'\n      };\n      classes.push(alertTypeClass[alert.type]);\n\n      if (alert.fade) {\n        classes.push('fade');\n      }\n\n      return classes.join(' ');\n    }\n\n  }\n\n  AlertComponent.ɵfac = function AlertComponent_Factory(t) {\n    return new (t || AlertComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AlertService));\n  };\n\n  AlertComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlertComponent,\n    selectors: [[\"alert\"]],\n    inputs: {\n      id: \"id\",\n      fade: \"fade\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"close\", 3, \"click\"], [3, \"innerHTML\"]],\n    template: function AlertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AlertComponent_div_0_Template, 4, 4, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.alerts);\n      }\n    },\n    styles: [\"\"]\n  });\n  return AlertComponent;\n})();","map":{"version":3,"sources":["/Users/jesse/Documents/faux-chezie/frontend/src/app/_components/alert/alert.component.ts"],"names":["NavigationStart","AlertType","i0","i1","i2","AlertComponent_div_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","AlertComponent_div_0_Template_a_click_1_listener","restoredCtx","ɵɵrestoreView","alert_r1","$implicit","ctx_r2","ɵɵnextContext","removeAlert","ɵɵtext","ɵɵelementEnd","ɵɵelement","ctx_r0","ɵɵclassMap","cssClass","ɵɵadvance","ɵɵproperty","message","ɵɵsanitizeHtml","AlertComponent","constructor","router","alertService","id","fade","alerts","ngOnInit","alertSubscription$","onAlert","subscribe","alert","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","routeSubscription$","events","event","clear","ngOnDestroy","unsubscribe","includes","classes","alertTypeClass","Success","Error","Info","Warning","type","join","ɵfac","AlertComponent_Factory","t","ɵɵdirectiveInject","Router","AlertService","ɵcmp","ɵɵdefineComponent","selectors","inputs","decls","vars","consts","template","AlertComponent_Template","ɵɵtemplate","styles"],"mappings":"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","sourcesContent":["import { NavigationStart } from '@angular/router';\n//Local dependencies\nimport { AlertType } from '../../_models/alert.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../_services/alert.service\";\nfunction AlertComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function AlertComponent_div_0_Template_a_click_1_listener() { const restoredCtx = i0.ɵɵrestoreView(_r3); const alert_r1 = restoredCtx.$implicit; const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.removeAlert(alert_r1); });\n    i0.ɵɵtext(2, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const alert_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.cssClass(alert_r1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", alert_r1.message, i0.ɵɵsanitizeHtml);\n} }\nexport class AlertComponent {\n    constructor(router, alertService) {\n        this.router = router;\n        this.alertService = alertService;\n        this.id = 'default-alert';\n        this.fade = true;\n        this.alerts = [];\n    }\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription$ = this.alertService\n            .onAlert(this.id)\n            .subscribe((alert) => {\n            // clear alerts when an empty alert is received\n            if (!alert.message) {\n                // filter out alerts without 'keepAfterRouteChange' flag\n                this.alerts = this.alerts.filter((x) => x.keepAfterRouteChange);\n                // remove 'keepAfterRouteChange' flag on the rest\n                this.alerts.forEach((x) => delete x.keepAfterRouteChange);\n                return;\n            }\n            // add alert to array\n            this.alerts.push(alert);\n            // auto close alert if required\n            if (alert.autoClose) {\n                setTimeout(() => this.removeAlert(alert), 3000);\n            }\n        });\n        // clear alerts on location change\n        this.routeSubscription$ = this.router.events.subscribe((event) => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription$.unsubscribe();\n        this.routeSubscription$.unsubscribe();\n    }\n    removeAlert(alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert))\n            return;\n        if (this.fade) {\n            // fade out alert\n            alert.fade = true;\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter((x) => x !== alert);\n            }, 250);\n        }\n        else {\n            // remove alert\n            this.alerts = this.alerts.filter((x) => x !== alert);\n        }\n    }\n    cssClass(alert) {\n        if (!alert)\n            return;\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning',\n        };\n        classes.push(alertTypeClass[alert.type]);\n        if (alert.fade) {\n            classes.push('fade');\n        }\n        return classes.join(' ');\n    }\n}\nAlertComponent.ɵfac = function AlertComponent_Factory(t) { return new (t || AlertComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AlertService)); };\nAlertComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AlertComponent, selectors: [[\"alert\"]], inputs: { id: \"id\", fade: \"fade\" }, decls: 1, vars: 1, consts: [[3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"close\", 3, \"click\"], [3, \"innerHTML\"]], template: function AlertComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, AlertComponent_div_0_Template, 4, 4, \"div\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.alerts);\n    } }, styles: [\"\"] });\n"]},"metadata":{},"sourceType":"module"}