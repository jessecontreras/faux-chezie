{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    constructor(accountService) {\n      this.accountService = accountService;\n    }\n\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(err => {\n        if (err.status === 401) {\n          // auto logout if 401 response returned from api\n          this.accountService.logout();\n        }\n\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      }));\n    }\n\n  }\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.AccountService));\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":{"version":3,"sources":["/Users/jesse/Documents/faux-chezie/frontend/src/app/_interceptors/error.interceptor.ts"],"names":["catchError","throwError","i0","i1","ErrorInterceptor","constructor","accountService","intercept","request","next","handle","pipe","err","status","logout","error","message","statusText","ɵfac","ErrorInterceptor_Factory","t","ɵɵinject","AccountService","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,8BAApB;AACA,WAAaC,gBAAb;AAAO,QAAMA,gBAAN,CAAuB;AAC1BC,IAAAA,WAAW,CAACC,cAAD,EAAiB;AACxB,WAAKA,cAAL,GAAsBA,cAAtB;AACH;;AACDC,IAAAA,SAAS,CAACC,OAAD,EAAUC,IAAV,EAAgB;AACrB,aAAOA,IAAI,CAACC,MAAL,CAAYF,OAAZ,EAAqBG,IAArB,CAA0BX,UAAU,CAAEY,GAAD,IAAS;AACjD,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB;AACA,eAAKP,cAAL,CAAoBQ,MAApB;AACH;;AACD,cAAMC,KAAK,GAAGH,GAAG,CAACG,KAAJ,CAAUC,OAAV,IAAqBJ,GAAG,CAACK,UAAvC;AACA,eAAOhB,UAAU,CAACc,KAAD,CAAjB;AACH,OAP0C,CAApC,CAAP;AAQH;;AAbyB;;AAe9BX,EAAAA,gBAAgB,CAACc,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,WAAO,KAAKA,CAAC,IAAIhB,gBAAV,EAA4BF,EAAE,CAACmB,QAAH,CAAYlB,EAAE,CAACmB,cAAf,CAA5B,CAAP;AAAqE,GAApI;;AACAlB,EAAAA,gBAAgB,CAACmB,KAAjB,GAAyB,aAAcrB,EAAE,CAACsB,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAErB,gBAAT;AAA2BsB,IAAAA,OAAO,EAAEtB,gBAAgB,CAACc;AAArD,GAAtB,CAAvC;AAhBA,SAAad,gBAAb;AAAA","sourcesContent":["import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nexport class ErrorInterceptor {\n    constructor(accountService) {\n        this.accountService = accountService;\n    }\n    intercept(request, next) {\n        return next.handle(request).pipe(catchError((err) => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.accountService.logout();\n            }\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}\nErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) { return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.AccountService)); };\nErrorInterceptor.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ErrorInterceptor, factory: ErrorInterceptor.ɵfac });\n"]},"metadata":{},"sourceType":"module"}