{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs'; //Local imports\n\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport let ErgService = /*#__PURE__*/(() => {\n  class ErgService {\n    constructor(router, http) {\n      this.router = router;\n      this.http = http;\n      this.ergSubject$ = new BehaviorSubject(JSON.parse(localStorage.getItem('ergs')));\n      this.erg$ = this.ergSubject$.asObservable();\n    }\n    /**\n     * Easy getter for user.\n     */\n\n\n    get ergsValue() {\n      return this.ergSubject$.value;\n    }\n\n    getAllErgs() {\n      try {\n        return this.http.get(`${environment.api}/ergs`).pipe(map(response => {\n          //Narrow type check\n          if ('error' in response) {\n            return response;\n          }\n\n          console.log('Made it back');\n          console.log(response);\n          localStorage.setItem('ergs', JSON.stringify(response));\n          this.ergSubject$.next(response);\n          console.log(response);\n          return response;\n        }));\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    }\n\n    addErg(erg) {\n      try {\n        return this.http.post(`${environment.api}/ergs`, {\n          erg: erg\n        }).pipe(map(response => {\n          //Narrow type check\n          if ('error' in response) {\n            return response;\n          }\n\n          localStorage.setItem('ergs', JSON.stringify(response));\n          this.ergSubject$.next(response);\n          return response;\n        }));\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    }\n\n  }\n\n  //end class\n  ErgService.ɵfac = function ErgService_Factory(t) {\n    return new (t || ErgService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  ErgService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErgService,\n    factory: ErgService.ɵfac,\n    providedIn: 'root'\n  });\n  return ErgService;\n})();","map":null,"metadata":{},"sourceType":"module"}