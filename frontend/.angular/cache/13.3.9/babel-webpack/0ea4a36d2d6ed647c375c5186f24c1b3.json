{"ast":null,"code":"import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\nlet CdkStepHeader = /*#__PURE__*/(() => {\n  class CdkStepHeader {\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n\n\n    focus() {\n      this._elementRef.nativeElement.focus();\n    }\n\n  }\n\n  CdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) {\n    return new (t || CdkStepHeader)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  CdkStepHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepHeader,\n    selectors: [[\"\", \"cdkStepHeader\", \"\"]],\n    hostAttrs: [\"role\", \"tab\"]\n  });\n  return CdkStepHeader;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet CdkStepLabel = /*#__PURE__*/(() => {\n  class CdkStepLabel {\n    constructor(\n    /** @docs-private */\n    template) {\n      this.template = template;\n    }\n\n  }\n\n  CdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) {\n    return new (t || CdkStepLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n\n  CdkStepLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepLabel,\n    selectors: [[\"\", \"cdkStepLabel\", \"\"]]\n  });\n  return CdkStepLabel;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID for each stepper component. */\n\n\nlet nextId = 0;\n/** Change event emitted on selection changes. */\n\nclass StepperSelectionEvent {}\n/** Enum to represent the different states of the steps. */\n\n\nconst STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\n\nconst STEPPER_GLOBAL_OPTIONS = /*#__PURE__*/new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nlet CdkStep = /*#__PURE__*/(() => {\n  class CdkStep {\n    constructor(_stepper, stepperOptions) {\n      this._stepper = _stepper;\n      /** Whether user has attempted to move away from the step. */\n\n      this.interacted = false;\n      /** Emits when the user has attempted to move away from the step. */\n\n      this.interactedStream = new EventEmitter();\n      this._editable = true;\n      this._optional = false;\n      this._completedOverride = null;\n      this._customError = null;\n      this._stepperOptions = stepperOptions ? stepperOptions : {};\n      this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n\n\n    get editable() {\n      return this._editable;\n    }\n\n    set editable(value) {\n      this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n\n\n    get optional() {\n      return this._optional;\n    }\n\n    set optional(value) {\n      this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n\n\n    get completed() {\n      return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n\n    set completed(value) {\n      this._completedOverride = coerceBooleanProperty(value);\n    }\n\n    _getDefaultCompleted() {\n      return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n\n\n    get hasError() {\n      return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n\n    set hasError(value) {\n      this._customError = coerceBooleanProperty(value);\n    }\n\n    _getDefaultError() {\n      return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n\n\n    select() {\n      this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n\n\n    reset() {\n      this.interacted = false;\n\n      if (this._completedOverride != null) {\n        this._completedOverride = false;\n      }\n\n      if (this._customError != null) {\n        this._customError = false;\n      }\n\n      if (this.stepControl) {\n        this.stepControl.reset();\n      }\n    }\n\n    ngOnChanges() {\n      // Since basically all inputs of the MatStep get proxied through the view down to the\n      // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n      this._stepper._stateChanged();\n    }\n\n    _markAsInteracted() {\n      if (!this.interacted) {\n        this.interacted = true;\n        this.interactedStream.emit(this);\n      }\n    }\n    /** Determines whether the error state can be shown. */\n\n\n    _showError() {\n      var _a; // We want to show the error state either if the user opted into/out of it using the\n      // global options, or if they've explicitly set it through the `hasError` input.\n\n\n      return (_a = this._stepperOptions.showError) !== null && _a !== void 0 ? _a : this._customError != null;\n    }\n\n  }\n\n  CdkStep.ɵfac = function CdkStep_Factory(t) {\n    return new (t || CdkStep)(i0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), i0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8));\n  };\n\n  CdkStep.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkStep,\n    selectors: [[\"cdk-step\"]],\n    contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n      }\n    },\n    viewQuery: function CdkStep_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    inputs: {\n      stepControl: \"stepControl\",\n      label: \"label\",\n      errorMessage: \"errorMessage\",\n      ariaLabel: [\"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n      state: \"state\",\n      editable: \"editable\",\n      optional: \"optional\",\n      completed: \"completed\",\n      hasError: \"hasError\"\n    },\n    outputs: {\n      interactedStream: \"interacted\"\n    },\n    exportAs: [\"cdkStep\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function CdkStep_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return CdkStep;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CdkStepper = /*#__PURE__*/(() => {\n  class CdkStepper {\n    constructor(_dir, _changeDetectorRef, _elementRef,\n    /**\n     * @deprecated No longer in use, to be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n      this._dir = _dir;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      /** Emits when the component is destroyed. */\n\n      this._destroyed = new Subject();\n      /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n\n      this.steps = new QueryList();\n      /** List of step headers sorted based on their DOM order. */\n\n      this._sortedHeaders = new QueryList();\n      this._linear = false;\n      this._selectedIndex = 0;\n      /** Event emitted when the selected step has changed. */\n\n      this.selectionChange = new EventEmitter();\n      /**\n       * @deprecated To be turned into a private property. Use `orientation` instead.\n       * @breaking-change 13.0.0\n       */\n\n      this._orientation = 'horizontal';\n      this._groupId = nextId++;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n\n\n    get linear() {\n      return this._linear;\n    }\n\n    set linear(value) {\n      this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n\n\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n\n    set selectedIndex(index) {\n      var _a;\n\n      const newIndex = coerceNumberProperty(index);\n\n      if (this.steps && this._steps) {\n        // Ensure that the index can't be out of bounds.\n        if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n        }\n\n        (_a = this.selected) === null || _a === void 0 ? void 0 : _a._markAsInteracted();\n\n        if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) && (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n          this._updateSelectedItemIndex(newIndex);\n        }\n      } else {\n        this._selectedIndex = newIndex;\n      }\n    }\n    /** The step that is selected. */\n\n\n    get selected() {\n      return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n\n    set selected(step) {\n      this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n\n\n    get orientation() {\n      return this._orientation;\n    }\n\n    set orientation(value) {\n      // This is a protected method so that `MatSteppter` can hook into it.\n      this._orientation = value;\n\n      if (this._keyManager) {\n        this._keyManager.withVerticalOrientation(value === 'vertical');\n      }\n    }\n\n    ngAfterContentInit() {\n      this._steps.changes.pipe(startWith(this._steps), takeUntil(this._destroyed)).subscribe(steps => {\n        this.steps.reset(steps.filter(step => step._stepper === this));\n        this.steps.notifyOnChanges();\n      });\n    }\n\n    ngAfterViewInit() {\n      // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n      // Material stepper, they won't appear in the `QueryList` in the same order as they're\n      // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n      // them manually to ensure that they're correct. Alternatively, we can change the Material\n      // template to inline the headers in the `ngFor`, but that'll result in a lot of\n      // code duplciation. See #23539.\n      this._stepHeader.changes.pipe(startWith(this._stepHeader), takeUntil(this._destroyed)).subscribe(headers => {\n        this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n          const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement); // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n          // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n          // tslint:disable-next-line:no-bitwise\n\n\n          return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        }));\n\n        this._sortedHeaders.notifyOnChanges();\n      }); // Note that while the step headers are content children by default, any components that\n      // extend this one might have them as view children. We initialize the keyboard handling in\n      // AfterViewInit so we're guaranteed for both view and content children to be defined.\n\n\n      this._keyManager = new FocusKeyManager(this._sortedHeaders).withWrap().withHomeAndEnd().withVerticalOrientation(this._orientation === 'vertical');\n      (this._dir ? this._dir.change : of()).pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n      this._keyManager.updateActiveItem(this._selectedIndex); // No need to `takeUntil` here, because we're the ones destroying `steps`.\n\n\n      this.steps.changes.subscribe(() => {\n        if (!this.selected) {\n          this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n        }\n      }); // The logic which asserts that the selected index is within bounds doesn't run before the\n      // steps are initialized, because we don't how many steps there are yet so we may have an\n      // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n\n      if (!this._isValidIndex(this._selectedIndex)) {\n        this._selectedIndex = 0;\n      }\n    }\n\n    ngOnDestroy() {\n      this.steps.destroy();\n\n      this._sortedHeaders.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n\n\n    next() {\n      this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n\n\n    previous() {\n      this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n\n\n    reset() {\n      this._updateSelectedItemIndex(0);\n\n      this.steps.forEach(step => step.reset());\n\n      this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n\n\n    _getStepLabelId(i) {\n      return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n\n\n    _getStepContentId(i) {\n      return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n\n\n    _stateChanged() {\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n\n\n    _getAnimationDirection(index) {\n      const position = index - this._selectedIndex;\n\n      if (position < 0) {\n        return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n      } else if (position > 0) {\n        return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n      }\n\n      return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n\n\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n      const step = this.steps.toArray()[index];\n\n      const isCurrentStep = this._isCurrentStep(index);\n\n      return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n      if (step._showError() && step.hasError && !isCurrentStep) {\n        return STEP_STATE.ERROR;\n      } else if (!step.completed || isCurrentStep) {\n        return STEP_STATE.NUMBER;\n      } else {\n        return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n      }\n    }\n\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n      if (step._showError() && step.hasError && !isCurrentStep) {\n        return STEP_STATE.ERROR;\n      } else if (step.completed && !isCurrentStep) {\n        return STEP_STATE.DONE;\n      } else if (step.completed && isCurrentStep) {\n        return state;\n      } else if (step.editable && isCurrentStep) {\n        return STEP_STATE.EDIT;\n      } else {\n        return state;\n      }\n    }\n\n    _isCurrentStep(index) {\n      return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n\n\n    _getFocusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n\n    _updateSelectedItemIndex(newIndex) {\n      const stepsArray = this.steps.toArray();\n      this.selectionChange.emit({\n        selectedIndex: newIndex,\n        previouslySelectedIndex: this._selectedIndex,\n        selectedStep: stepsArray[newIndex],\n        previouslySelectedStep: stepsArray[this._selectedIndex]\n      }); // If focus is inside the stepper, move it to the next header, otherwise it may become\n      // lost when the active step content is hidden. We can't be more granular with the check\n      // (e.g. checking whether focus is inside the active step), because we don't have a\n      // reference to the elements that are rendering out the content.\n\n      this._containsFocus() ? this._keyManager.setActiveItem(newIndex) : this._keyManager.updateActiveItem(newIndex);\n      this._selectedIndex = newIndex;\n\n      this._stateChanged();\n    }\n\n    _onKeydown(event) {\n      const hasModifier = hasModifierKey(event);\n      const keyCode = event.keyCode;\n      const manager = this._keyManager;\n\n      if (manager.activeItemIndex != null && !hasModifier && (keyCode === SPACE || keyCode === ENTER)) {\n        this.selectedIndex = manager.activeItemIndex;\n        event.preventDefault();\n      } else {\n        manager.onKeydown(event);\n      }\n    }\n\n    _anyControlsInvalidOrPending(index) {\n      if (this._linear && index >= 0) {\n        return this.steps.toArray().slice(0, index).some(step => {\n          const control = step.stepControl;\n          const isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;\n          return isIncomplete && !step.optional && !step._completedOverride;\n        });\n      }\n\n      return false;\n    }\n\n    _layoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n\n\n    _containsFocus() {\n      const stepperElement = this._elementRef.nativeElement;\n\n      const focusedElement = _getFocusedElementPierceShadowDom();\n\n      return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n\n\n    _isValidIndex(index) {\n      return index > -1 && (!this.steps || index < this.steps.length);\n    }\n\n  }\n\n  CdkStepper.ɵfac = function CdkStepper_Factory(t) {\n    return new (t || CdkStepper)(i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  CdkStepper.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepper,\n    selectors: [[\"\", \"cdkStepper\", \"\"]],\n    contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkStep, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._steps = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n      }\n    },\n    inputs: {\n      linear: \"linear\",\n      selectedIndex: \"selectedIndex\",\n      selected: \"selected\",\n      orientation: \"orientation\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    exportAs: [\"cdkStepper\"]\n  });\n  return CdkStepper;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Button that moves to the next step in a stepper workflow. */\n\n\nlet CdkStepperNext = /*#__PURE__*/(() => {\n  class CdkStepperNext {\n    constructor(_stepper) {\n      this._stepper = _stepper;\n      /** Type of the next button. Defaults to \"submit\" if not specified. */\n\n      this.type = 'submit';\n    }\n\n  }\n\n  CdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) {\n    return new (t || CdkStepperNext)(i0.ɵɵdirectiveInject(CdkStepper));\n  };\n\n  CdkStepperNext.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepperNext,\n    selectors: [[\"button\", \"cdkStepperNext\", \"\"]],\n    hostVars: 1,\n    hostBindings: function CdkStepperNext_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() {\n          return ctx._stepper.next();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    }\n  });\n  return CdkStepperNext;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Button that moves to the previous step in a stepper workflow. */\n\n\nlet CdkStepperPrevious = /*#__PURE__*/(() => {\n  class CdkStepperPrevious {\n    constructor(_stepper) {\n      this._stepper = _stepper;\n      /** Type of the previous button. Defaults to \"button\" if not specified. */\n\n      this.type = 'button';\n    }\n\n  }\n\n  CdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) {\n    return new (t || CdkStepperPrevious)(i0.ɵɵdirectiveInject(CdkStepper));\n  };\n\n  CdkStepperPrevious.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepperPrevious,\n    selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]],\n    hostVars: 1,\n    hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() {\n          return ctx._stepper.previous();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    }\n  });\n  return CdkStepperPrevious;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet CdkStepperModule = /*#__PURE__*/(() => {\n  class CdkStepperModule {}\n\n  CdkStepperModule.ɵfac = function CdkStepperModule_Factory(t) {\n    return new (t || CdkStepperModule)();\n  };\n\n  CdkStepperModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CdkStepperModule\n  });\n  CdkStepperModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[BidiModule]]\n  });\n  return CdkStepperModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };","map":{"version":3,"sources":["/Users/jesse/Documents/faux-chezie/frontend/node_modules/@angular/cdk/fesm2015/stepper.mjs"],"names":["FocusKeyManager","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","SPACE","ENTER","DOCUMENT","i0","Directive","InjectionToken","EventEmitter","forwardRef","TemplateRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Optional","ContentChild","ViewChild","Input","Output","QueryList","ContentChildren","NgModule","_getFocusedElementPierceShadowDom","Subject","of","startWith","takeUntil","i1","BidiModule","CdkStepHeader","constructor","_elementRef","focus","nativeElement","ɵfac","ElementRef","ɵdir","CdkStepLabel","template","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","interactedStream","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","editable","value","optional","completed","_getDefaultCompleted","stepControl","valid","hasError","_getDefaultError","invalid","select","selected","reset","ngOnChanges","_stateChanged","_markAsInteracted","emit","_showError","_a","showError","CdkStepper","ɵcmp","_dir","_changeDetectorRef","_document","_destroyed","steps","_sortedHeaders","_linear","_selectedIndex","selectionChange","_orientation","_groupId","linear","selectedIndex","index","newIndex","_steps","_isValidIndex","ngDevMode","Error","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","undefined","step","indexOf","orientation","_keyManager","withVerticalOrientation","ngAfterContentInit","changes","pipe","subscribe","filter","notifyOnChanges","ngAfterViewInit","_stepHeader","headers","sort","a","b","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","withWrap","withHomeAndEnd","change","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","ngOnDestroy","destroy","next","complete","min","length","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","state","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","keyCode","manager","preventDefault","onKeydown","slice","some","control","isIncomplete","pending","stepperElement","focusedElement","contains","Directionality","ChangeDetectorRef","CdkStepperNext","type","CdkStepperPrevious","CdkStepperModule","ɵmod","ɵinj"],"mappings":"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","sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepHeader, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepLabel, selector: \"[cdkStepLabel]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        var _a;\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return (_a = this._stepperOptions.showError) !== null && _a !== void 0 ? _a : this._customError != null;\n    }\n}\nCdkStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStep, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\" }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkStepper, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => CdkStepper)]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [STEPPER_GLOBAL_OPTIONS]\n                    }] }];\n    }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], completed: [{\n                type: Input\n            }], hasError: [{\n                type: Input\n            }] } });\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, _elementRef, \n    /**\n     * @deprecated No longer in use, to be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * @deprecated To be turned into a private property. Use `orientation` instead.\n         * @breaking-change 13.0.0\n         */\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        var _a;\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            (_a = this.selected) === null || _a === void 0 ? void 0 : _a._markAsInteracted();\n            if (this._selectedIndex !== newIndex &&\n                !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(newIndex);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatSteppter` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplciation. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n}\nCdkStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepper, selector: \"[cdkStepper]\", inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n}\nCdkStepperNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepperNext, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n}\nCdkStepperPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepperPrevious, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, declarations: [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious], imports: [BidiModule], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] });\nCdkStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, imports: [[BidiModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n"]},"metadata":{},"sourceType":"module"}