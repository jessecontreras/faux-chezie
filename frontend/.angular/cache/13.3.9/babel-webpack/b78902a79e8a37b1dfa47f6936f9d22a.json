{"ast":null,"code":"import _asyncToGenerator from \"/Users/jesse/Documents/faux-chezie/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject, map } from 'rxjs'; //Local imports\n\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport let AccountService = /*#__PURE__*/(() => {\n  class AccountService {\n    constructor(router, http) {\n      this.router = router;\n      this.http = http;\n      this.userSubject$ = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n      this.user$ = this.userSubject$.asObservable();\n    }\n    /**\n     * Easy getter for user.\n     */\n\n\n    get userValue() {\n      return this.userSubject$.value;\n    }\n\n    authUser(email, password) {\n      try {\n        console.log('Auth user, meh');\n        /* const response = await firstValueFrom(\n          this.http.post<User | ServerError>(\n            `${environment.api}/accounts/authentication`,\n            {\n              email,\n              password,\n            }\n          )\n        );\n        //In narrow type check\n        if ('error' in response) {\n          return response;\n        }\n        //If response is a User instance, save to localstorage and update userSubject\n        //if (response instanceof User) {\n        console.log('Instance user');\n        const user = response;\n        localStorage.setItem('user', JSON.stringify(user));\n        this.userSubject$.next(user);\n        // }\n        return response;*/\n\n        return this.http.post(`${environment.api}/accounts/authentication`, {\n          email,\n          password\n        }).pipe(map(user => {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('user', JSON.stringify(user));\n          this.userSubject$.next(user);\n          return user;\n        }));\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    }\n\n    logout() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        localStorage.removeItem('user');\n\n        _this.userSubject$.next(null);\n\n        _this.router.navigate(['/login']);\n      })();\n    }\n\n  }\n\n  AccountService.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  AccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountService;\n})();","map":null,"metadata":{},"sourceType":"module"}