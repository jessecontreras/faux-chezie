{"ast":null,"code":"import _asyncToGenerator from \"/Users/jesse/Documents/faux-chezie/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject, firstValueFrom } from 'rxjs'; //Local imports\n\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"./alert.service\";\nexport class AccountService {\n  constructor(router, http, alertService) {\n    this.router = router;\n    this.http = http;\n    this.alertService = alertService;\n    this.userSubject$ = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n    this.user$ = this.userSubject$.asObservable();\n  }\n  /**\n   * Easy getter for user.\n   */\n\n\n  get userValue() {\n    return this.userSubject$.value;\n  }\n\n  authUser(email, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        console.log('Auth user, meh');\n        const response = yield firstValueFrom(_this.http.post(`${environment.api}/accounts/authentication`, {\n          email,\n          password\n        }));\n        console.log(response);\n\n        if (response instanceof User) {\n          const user = response;\n          localStorage.setItem('user', JSON.stringify(user));\n\n          _this.userSubject$.next(user);\n\n          return user;\n        }\n\n        _this.alertService.error(response.error);\n\n        return; //prompt user to check their email\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    })();\n  }\n\n  logout() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      localStorage.removeItem('user');\n\n      _this2.userSubject$.next(null);\n\n      _this2.router.navigate(['/login']);\n    })();\n  }\n\n}\n\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.AlertService));\n};\n\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/jesse/Documents/faux-chezie/frontend/src/app/_services/account.service.ts"],"names":["BehaviorSubject","firstValueFrom","environment","User","i0","i1","i2","i3","AccountService","constructor","router","http","alertService","userSubject$","JSON","parse","localStorage","getItem","user$","asObservable","userValue","value","authUser","email","password","console","log","response","post","api","user","setItem","stringify","next","error","err","logout","removeItem","navigate","ɵfac","AccountService_Factory","t","ɵɵinject","Router","HttpClient","AlertService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { BehaviorSubject, firstValueFrom } from 'rxjs';\n//Local imports\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"./alert.service\";\nexport class AccountService {\n    constructor(router, http, alertService) {\n        this.router = router;\n        this.http = http;\n        this.alertService = alertService;\n        this.userSubject$ = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n        this.user$ = this.userSubject$.asObservable();\n    }\n    /**\n     * Easy getter for user.\n     */\n    get userValue() {\n        return this.userSubject$.value;\n    }\n    async authUser(email, password) {\n        try {\n            console.log('Auth user, meh');\n            const response = await firstValueFrom(this.http.post(`${environment.api}/accounts/authentication`, {\n                email,\n                password,\n            }));\n            console.log(response);\n            if (response instanceof User) {\n                const user = response;\n                localStorage.setItem('user', JSON.stringify(user));\n                this.userSubject$.next(user);\n                return user;\n            }\n            this.alertService.error(response.error);\n            return;\n            //prompt user to check their email\n        }\n        catch (err) {\n            console.log(err);\n            throw err;\n        }\n    }\n    async logout() {\n        localStorage.removeItem('user');\n        this.userSubject$.next(null);\n        this.router.navigate(['/login']);\n    }\n}\nAccountService.ɵfac = function AccountService_Factory(t) { return new (t || AccountService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.AlertService)); };\nAccountService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AccountService, factory: AccountService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}