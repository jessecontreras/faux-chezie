{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    constructor(accountService) {\n      this.accountService = accountService;\n    }\n    /**\n     * Really checking for 401 (not auth) errors, logout if so.\n     */\n\n\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(err => {\n        if (err.status === 401) {\n          //logout if 401 response returned from api\n          this.accountService.logout();\n        }\n\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      }));\n    }\n\n  }\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.AccountService));\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}