{"version":3,"file":"734.e8d24dd8559c5482.js","mappings":"iMASO,IAAMA,EAAb,MAAM,QACJC,YAAoBC,EAAwBC,GAAxBC,cAAwBA,sBACtCA,KAAKD,eAAeE,WACtBD,KAAKF,OAAOI,SAAS,CAAC,MAK1BC,WAAQ,+CARGP,GAAeQ,iDAAfR,EAAeS,sECT5BD,0DDSaR,GAAb,gFEHMU,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWZ,EACXa,SAAU,CAAC,CAAEF,KAAM,QAASC,UCIhC,MAAM,QAQJX,YACUE,EACAW,EACAC,EACAC,EACAd,GAJAE,sBACAA,UACAA,oBACAA,aACAA,cAXVA,eAAYA,KAAKU,GAAGG,MAAM,CACxBC,MAAO,CAAC,GAAI,CAACC,cAAqBA,aAClCC,SAAU,CAAC,GAAID,iBAEjBf,oBAAyB,EACzBA,gBAAqB,SASrBG,WAAQ,CAEFc,WAAQ,qCACZ,IACEC,EAAKC,WAAa,kBAClBD,EAAKP,aAAaS,QAClBF,EAAKG,eAAgB,EACrB,MAAMC,EAAaJ,EAAKK,UAAUC,SAASV,MAASW,MAC9CC,EAAgBR,EAAKK,UAAUC,SAASR,SAAYS,MAC1D,OAAIP,EAAKK,UAAUI,aACjBT,EAAKU,uBAIPV,EAAKnB,eACFkB,SAASK,EAAYI,GACrBG,MAAKC,UACLC,UAAU,CACTC,KAAOC,IAEL,GAAI,UAAWA,EAGb,OAFAf,EAAKP,aAAauB,MAAMD,EAASC,YACjChB,EAAKU,kBAMPV,EAAKpB,OAAOqC,cADVjB,EAAKN,MAAMwB,SAASC,YAAYC,WAAgB,IACxBA,EAE5BJ,MAAQA,IACNhB,EAAKP,aAAauB,MAAMA,GACxBhB,EAAKU,oBAOLW,CAHN,MACOA,GACPC,cAAQC,IAAIF,GACNA,IArCI,EAqCJA,CAIJX,kBAAe,qCACnB,IAGE,YADAV,EAAKC,WAAa,SAIZoB,CAHN,MACOA,GACPC,cAAQC,IAAIF,GACNA,IAPW,EAOXA,+CAlECG,GAActC,oFAAdsC,EAAcrC,4cCuBXD,8CAAsC,mFArCtDA,iBACEA,iBACEA,iBACEA,iBAAkBA,iBAAgDA,QAClEA,iBACEA,iBACEA,iBAAyBA,kBAAMA,QAC/BA,kBACEA,oBASAA,qBASAA,sBAAQA,gCAASuC,eACfvC,cAAGA,UAAgBA,QACrBA,QACAA,kBACFA,QACFA,QACFA,QACFA,QACAA,mBACEA,mBACEA,sBAKAA,mBACEA,eAAIA,mDAAsCA,QAC1CA,cAAGA,8EAAiEA,QACtEA,QACFA,QACFA,QACFA,QACFA,eAzCgBA,wCAKFA,wFASAA,2FAMGA,ooCDbJsC,GAAb,ODIO,IAAME,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsBvC,IACtBuC,QAECD,GAAb,GGLaE,EAAb,MAAM,sDAAOA,4DAHF,CAACC,KAAcC,KAAqBJ,MAGlCE,GAAb,EAAaA","names":["LayoutComponent","constructor","router","accountService","this","userValue","navigate","ngOnInit","i0","selectors","routes","path","component","children","fb","alertService","route","group","email","Validators","password","authUser","e","buttonText","clear","formSubmitted","emailValue","loginForm","controls","value","passwordValue","invalid","resetFormValues","pipe","first","subscribe","next","response","error","navigateByUrl","snapshot","queryParams","returnUrl","err","console","log","LoginComponent","ctx","AccountRoutingModule","RouterModule","AccountModule","CommonModule","ReactiveFormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/account/layout.component.ts","./src/app/account/layout.component.html","./src/app/account/account-routing.module.ts","./src/app/account/login.component.ts","./src/app/account/login.component.html","./src/app/account/account.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  constructor(private router: Router, private accountService: AccountService) {\n    if (this.accountService.userValue) {\n      this.router.navigate(['/']);\n    }\n  }\n  // redirect to home if already logged in\n\n  ngOnInit(): void {}\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [{ path: 'login', component: LoginComponent }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","//Ng dependencies\nimport { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertService } from '../_services/alert.service';\nimport { User } from '../_models/user.model';\nimport { first } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  //Create login form with respective validators\n  loginForm = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required],\n  });\n  formSubmitted: boolean = false;\n  buttonText: string = 'Log In';\n  constructor(\n    private accountService: AccountService,\n    private fb: FormBuilder,\n    private alertService: AlertService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  async authUser() {\n    try {\n      this.buttonText = 'Please wait ...';\n      this.alertService.clear();\n      this.formSubmitted = true;\n      const emailValue = this.loginForm.controls['email'].value;\n      const passwordValue = this.loginForm.controls['password'].value;\n      if (this.loginForm.invalid) {\n        this.resetFormValues();\n        return;\n      }\n\n      this.accountService\n        .authUser(emailValue, passwordValue)\n        .pipe(first())\n        .subscribe({\n          next: (response) => {\n            //narrow type check\n            if ('error' in response) {\n              this.alertService.error(response.error);\n              this.resetFormValues();\n              return;\n            }\n            // get return url from query parameters or default to home page\n            const returnUrl =\n              this.route.snapshot.queryParams['returnUrl'] || '/';\n            this.router.navigateByUrl(returnUrl);\n          },\n          error: (error) => {\n            this.alertService.error(error);\n            this.resetFormValues();\n            // this.loading = false;\n          },\n        });\n      return;\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async resetFormValues() {\n    try {\n      //this.processingLogin = false;\n      this.buttonText = 'Log In';\n      return;\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n}\n","<div class=\"page-container\">\n  <div class=\"login\">\n    <div class=\"login-section\">\n      <div class=\"logo\"><img src=\"../../assets/images/login-icon.png\" /></div>\n      <div class=\"input-card\">\n        <div class=\"input-card-content\">\n          <div class=\"input-title\">Log in</div>\n          <form [formGroup]=\"loginForm\">\n            <input\n              type=\"email\"\n              formControlName=\"email\"\n              placeholder=\"Email\"\n              [ngClass]=\"{\n                'is-invalid':\n                  formSubmitted && loginForm.controls['email'].errors\n              }\"\n            />\n            <input\n              type=\"password\"\n              formControlName=\"password\"\n              placeholder=\"Password\"\n              [ngClass]=\"{\n                'is-invalid':\n                  formSubmitted  && loginForm.controls['password'].errors\n              }\"\n            />\n            <button (click)=\"authUser()\">\n              <b>{{ buttonText }}</b>\n            </button>\n            <small></small>\n          </form>\n        </div>\n      </div>\n    </div>\n    <div class=\"content-preview\">\n      <div class=\"content-container\">\n        <object\n          data=\"../../assets/images/chezie-content.svg\"\n          height=\"500px\"\n          width=\"400px\"\n        ></object>\n        <div class=\"content-text\">\n          <h1>Inclusion discovered. Work Reimagined.</h1>\n          <p>Welcome! Login, discover, create, join and explore Chezie's ERGs.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","//Ng dependencies\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n//Local dependencies\nimport { AccountRoutingModule } from './account-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, AccountRoutingModule],\n  declarations: [LayoutComponent, LoginComponent],\n})\nexport class AccountModule {}\n"]}